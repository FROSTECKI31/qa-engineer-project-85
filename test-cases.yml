- summary: |
    Тестирование процесса регистрации нового пользователя в системе.
  requirement: |
    Пользователь должен иметь возможность регистрации.
  prerequisites: |
    Отсутствие аккаунта с таким же email в системе.
  test-data: |
    username: new_user
    email: new_user@example.com
    password: Password
  steps:
    - Перейти на страницу сайта
    - Нажать кнопку "Sign up"
    - Ввести в поля формы данные: username, email, пароль.
    - Нажать кнопку "Sumbit".
  expected-result: |
    Пользователь успешно зарегистрирован и перенаправлен на главную страницу с сообщением о успешной регистрации.

- summary: |
    Тестирование авторизации пользователя с валидными учетными данными.
  requirement: |
    Система должна предоставлять возможность авторизации.
  prerequisites: |
    Аккаунт с указанным email и паролем должен существовать в системе.
  test-data: |
    email: new_user@example.com
    password: Password
  steps:
    - Перейти на страницу сайта
    - Нажать кнопку "Sign in"
    - Ввести валидные учетные данные в поля формы.
    - Нажать кнопку "Sumbit".
  expected-result: |
    Пользователь успешно авторизован и перенаправлен на главную страницу.

- summary: |
    Проверка возможности создания новых матчей по программированию.
  requirement: |
    Пользователь должен иметь возможность создать матч.
  prerequisites: |
    Пользователь должен быть авторизован в системе.
  test-data: |
    email: new_user@example.com
    password: PasswChoose task by name or tagsord
  steps:
    - Авторизоваться в системе.
    - Нажать кнопку "CREATE A NEW GAME"
    - Выбрать сложность (Level)
    - Выбрать тип игры (Game Type)
    - Выставить длительность по времени (Game Type)
    - Выбрать задачу по названию или тегам (Choose task by name or tags)
    - Выбрать тег (Tags)
    - Нажать на кнопку создать игру (Create battle)
    - Убедиться, что матч успешно создан и отображается в списке доступных матчей.
  expected-result: |
    Новый матч создан и доступен для присоединения других пользователей.

- summary: |
    Тестирование участия пользователя в созданном матче.
  requirement: |
    Пользователь должен иметь возможность присоединиться к матчу.
  prerequisites: |
     В системе должен быть создан матч.
  test-data: |
    email: new_user@example.com
    password: PasswChoose task by name or tagsord
  steps:
    - Авторизоваться в системе.
    - Выбрать вкладку "LOBBY"
    - Найти созданные матчи
    - Нажать на кнопку "Fight" для присоединения к матчу
    - Убедиться, что пользователь перенаправлен на страницу матча.
  expected-result: |
     Пользователь успешно присоединяется к матчу и может начать выполнение задания.

- summary: |
    Проверка выполнения задания в матче.
  requirement: |
    Пользователь должен иметь возможность выполнить задание в рамках матча.
  prerequisites: |
    Пользователь должен быть участником матча.
  test-data: |
    empty
  steps:
    - Присоединиться к матчу.
    - Прочитать задание, предоставленное в рамках матча.
    - Ввести решение задания в соответствующем текстовом редакторе.
    - Нажать на кнопку "Submit" или "Отправить".
    - Убедиться, что система проверила решение и предоставила результаты.
  expected-result: |
     Решение задания проверено, и пользователю отображаются результаты выполнения задачи.

- summary: |
    Проверка времени загрузки основных страниц сайта.
  requirement: |
    Страницы сайта должны загружаться за приемлемое время (не более 2 секунд).
  prerequisites: |
    Среда тестирования с доступом к интернету.
  test-data: |
    empty
  steps:
    - Перейти по каждой вкладке сайта.
    - Измерить время загрузки страницы.
    - Убедиться, что время загрузки каждой страницы не превышает 2 секунд.
  expected-result: |
     Все страницы загружаются не более чем за 2 секунды.

- summary: |
    Проверка работы сайта на различных браузерах.
  requirement: |
    Сайт должен корректно работать в основных браузерах.
  prerequisites: |
    Установленные браузеры Chrome, Firefox, Edge.
  test-data: |
    empty
  steps:
    - Открыть сайт Codebattle в браузере Chrome.
    - Измерить время загрузки страницы.
    - Проверить отображение и функциональность основных элементов интерфейса.
    - Повторить шаги 1-2 для браузеров Firefox и Edge.
  expected-result: |
     Сайт корректно работает во всех указанных браузерах, без проблем с отображением и функциональностью.

- summary: |
    Проверка интуитивности интерфейса при использовании новым пользователем.
  requirement: |
    Интерфейс сайта должен быть интуитивно понятен и легко освоен новым пользователем.
  prerequisites: |
    Новый пользователь, который не использовал сайт ранее.
  test-data: |
    empty
  steps:
    - Зарегистрировать нового пользователя.
    - Попросить пользователя пройтись по основным разделам сайта (регистрация, участие в матче, выполнение задания).
    - Наблюдать за тем, насколько легко пользователь справляется с задачами без подсказок.
  expected-result: |
     Наблюдать за тем, насколько легко пользователь справляется с задачами без подсказок.

- summary: |
     Проверка системы на попытку зарегистрироваться с уже используемым email.
  requirement: |
    Система должна информировать пользователя о невозможности регистрации с уже существующим email.
  prerequisites: |
    Аккаунт с таким email уже должен существовать в системе.
  test-data: |
     email: "new_user@example.com"
     username: "new_user"
     password: "Password"
  steps:
    - Перейти на страницу регистрации на сайте
    - Ввести существующий email new_user@example.com.
    - Ввести другие необходимые данные.
    - Нажать кнопку "Sumbit".
    - Убедиться, что система отображает сообщение об ошибке, указывающее, что данный email уже используется.
  expected-result: |
     Появляется сообщение об ошибке с указанием, что email уже занят, и регистрация не проходит.
